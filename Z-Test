{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP/SeN3UkCTYCvr6E1OkC31",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/geethaammu/DataScience/blob/main/Ds_ex_6.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "ONE SAMPLE Z-TEST"
      ],
      "metadata": {
        "id": "-UHnAQTBR0K3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import numpy as np\n",
        "import scipy.stats as stats\n",
        "\n",
        "def one_sample_z_test(data, population_mean, population_stddev, significance_level):\n",
        "    \"\"\"Computes the one-sample Z-test for a given dataset, population mean, population standard deviation, and significance level\"\"\"\n",
        "    \n",
        "    # Compute the sample size, mean, and standard deviation\n",
        "    sample_size = len(data)\n",
        "    sample_mean = np.mean(data)\n",
        "    sample_stddev = np.std(data, ddof=1)\n",
        "    \n",
        "    # Compute the Z-score\n",
        "    z_score = (sample_mean - population_mean) / (population_stddev / np.sqrt(sample_size))\n",
        "    \n",
        "    # Compute the p-value using a standard normal distribution\n",
        "    p_value = stats.norm.sf(abs(z_score)) * 2\n",
        "    \n",
        "    # Check if the p-value is less than the significance level\n",
        "    if p_value < significance_level:\n",
        "        print(\"Reject null hypothesis\")\n",
        "    else:\n",
        "        print(\"Fail to reject null hypothesis\")\n",
        "    \n",
        "    # Return the Z-score and p-value\n",
        "    return z_score, p_value\n"
      ],
      "metadata": {
        "id": "N8DJoUY2RT0I"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = [23, 22, 19, 21, 18, 20, 22, 20, 19, 21]\n",
        "population_mean = 20\n",
        "population_stddev = 2\n",
        "significance_level = 0.05\n",
        "\n",
        "z_score, p_value = one_sample_z_test(data, population_mean, population_stddev, significance_level)\n",
        "\n",
        "print(\"Z-score:\", z_score)\n",
        "print(\"p-value:\", p_value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Dq9f9NbQRxn4",
        "outputId": "252c7342-3a86-4823-b58e-a4518743cde5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fail to reject null hypothesis\n",
            "Z-score: 0.7905694150420948\n",
            "p-value: 0.42919530044034926\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "TWO SAMPLE Z-TEST\n"
      ],
      "metadata": {
        "id": "LwYj3IqSgqcj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-WeDpi_ElYWI",
        "outputId": "8ada51cc-7b91-42bb-c105-c0d4b3a831bf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from scipy.stats import norm\n",
        "\n",
        "# Load the dataset\n",
        "data = pd.read_csv('/content/drive/MyDrive/insurance.csv')\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "14Fx3OqCl9JQ",
        "outputId": "7162aba3-4fdb-466f-f77a-c41d2818c2c6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   age     sex     bmi  children smoker     region      charges\n",
              "0   19  female  27.900         0    yes  southwest  16884.92400\n",
              "1   18    male  33.770         1     no  southeast   1725.55230\n",
              "2   28    male  33.000         3     no  southeast   4449.46200\n",
              "3   33    male  22.705         0     no  northwest  21984.47061\n",
              "4   32    male  28.880         0     no  northwest   3866.85520"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d4fd7480-81c2-427d-adcd-089c789db95d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>bmi</th>\n",
              "      <th>children</th>\n",
              "      <th>smoker</th>\n",
              "      <th>region</th>\n",
              "      <th>charges</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19</td>\n",
              "      <td>female</td>\n",
              "      <td>27.900</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>southwest</td>\n",
              "      <td>16884.92400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>18</td>\n",
              "      <td>male</td>\n",
              "      <td>33.770</td>\n",
              "      <td>1</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>1725.55230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>28</td>\n",
              "      <td>male</td>\n",
              "      <td>33.000</td>\n",
              "      <td>3</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>4449.46200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>male</td>\n",
              "      <td>22.705</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>21984.47061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>32</td>\n",
              "      <td>male</td>\n",
              "      <td>28.880</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>3866.85520</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4fd7480-81c2-427d-adcd-089c789db95d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d4fd7480-81c2-427d-adcd-089c789db95d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d4fd7480-81c2-427d-adcd-089c789db95d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "# Divide the dataset into two samples\n",
        "sample_1 = data['age']\n",
        "sample_2 = data['bmi']\n",
        "\n",
        "# Calculate the mean of each sample\n",
        "mean_1 = sample_1.mean()\n",
        "mean_2 = sample_2.mean()\n",
        "\n",
        "# Calculate the standard deviation of each sample\n",
        "std_dev_1 = sample_1.std()\n",
        "std_dev_2 = sample_2.std()\n",
        "\n",
        "# Calculate the standard error of the difference between the means\n",
        "std_error = ((std_dev_1 ** 2) / len(sample_1) + (std_dev_2 ** 2) / len(sample_2)) ** 0.5\n",
        "\n",
        "# Calculate the Z-score\n",
        "z_score = (mean_1 - mean_2) / std_error\n",
        "\n",
        "# Set the significance level (alpha)\n",
        "alpha = 0.05\n",
        "\n",
        "# Calculate the critical Z-value for the given significance level\n",
        "critical_z = norm.ppf(1 - alpha / 2)\n",
        "\n",
        "# Determine if the null hypothesis should be rejected\n",
        "if abs(z_score) > critical_z:\n",
        "    print(\"Reject the null hypothesis.\")\n",
        "else:\n",
        "    print(\"Fail to reject the null hypothesis.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NiNYlZehgrRL",
        "outputId": "812cea8f-abad-42ef-9763-73c964997f2c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Reject the null hypothesis.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "PAIRED Z-TEST\n"
      ],
      "metadata": {
        "id": "6sqnqY0km-y4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from scipy import stats\n",
        "\n",
        "# Sample data\n",
        "a = np.array([10, 20, 30, 40, 50])\n",
        "b = np.array([12, 22, 32, 42, 52])\n",
        "\n",
        "# Calculate the differences between pairs\n",
        "d = b - a\n",
        "\n",
        "# Calculate the mean and standard deviation of the differences\n",
        "mean = np.mean(d)\n",
        "std_dev = np.std(d)\n",
        "\n",
        "# Calculate the standard error of the mean difference\n",
        "n = len(d)\n",
        "sem = std_dev / np.sqrt(n)\n",
        "\n",
        "# Calculate the test statistic\n",
        "z = mean / sem\n",
        "\n",
        "# Calculate the p-value\n",
        "p = stats.norm.sf(abs(z))*2\n",
        "\n",
        "# Print the results\n",
        "print(\"Paired Z-test results:\")\n",
        "print(\"Mean difference:\", mean)\n",
        "print(\"Standard deviation of difference:\", std_dev)\n",
        "print(\"Standard error of the mean difference:\", sem)\n",
        "print(\"Z-score:\", z)\n",
        "print(\"p-value:\", p)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wYDd9lj4lzwq",
        "outputId": "8cfd1b3b-2c23-4582-93e4-b71cc9a0c737"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Paired Z-test results:\n",
            "Mean difference: 2.0\n",
            "Standard deviation of difference: 0.0\n",
            "Standard error of the mean difference: 0.0\n",
            "Z-score: inf\n",
            "p-value: 0.0\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-1c28fe33c433>:20: RuntimeWarning: divide by zero encountered in double_scalars\n",
            "  z = mean / sem\n"
          ]
        }
      ]
    }
  ]
}
